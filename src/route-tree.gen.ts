/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthGuardedImport } from './routes/_auth-guarded'
import { Route as AuthGuardedIndexImport } from './routes/_auth-guarded/index'
import { Route as UserUserIdUserLayoutImport } from './routes/user/$userId/_user-layout'
import { Route as AuthGuardedMeUserLayoutImport } from './routes/_auth-guarded/me/_user-layout'
import { Route as UserUserIdUserLayoutTabIndexImport } from './routes/user/$userId/_user-layout/$tab/index'

// Create Virtual Routes

const UserUserIdImport = createFileRoute('/user/$userId')()
const AuthGuardedMeImport = createFileRoute('/_auth-guarded/me')()

// Create/Update Routes

const AuthGuardedRoute = AuthGuardedImport.update({
  id: '/_auth-guarded',
  getParentRoute: () => rootRoute,
} as any)

const UserUserIdRoute = UserUserIdImport.update({
  path: '/user/$userId',
  getParentRoute: () => rootRoute,
} as any)

const AuthGuardedMeRoute = AuthGuardedMeImport.update({
  path: '/me',
  getParentRoute: () => AuthGuardedRoute,
} as any)

const AuthGuardedIndexRoute = AuthGuardedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthGuardedRoute,
} as any)

const UserUserIdUserLayoutRoute = UserUserIdUserLayoutImport.update({
  id: '/_user-layout',
  getParentRoute: () => UserUserIdRoute,
} as any)

const AuthGuardedMeUserLayoutRoute = AuthGuardedMeUserLayoutImport.update({
  id: '/_user-layout',
  getParentRoute: () => AuthGuardedMeRoute,
} as any)

const UserUserIdUserLayoutTabIndexRoute =
  UserUserIdUserLayoutTabIndexImport.update({
    path: '/$tab/',
    getParentRoute: () => UserUserIdUserLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth-guarded': {
      id: '/_auth-guarded'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthGuardedImport
      parentRoute: typeof rootRoute
    }
    '/_auth-guarded/': {
      id: '/_auth-guarded/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthGuardedIndexImport
      parentRoute: typeof AuthGuardedImport
    }
    '/_auth-guarded/me': {
      id: '/_auth-guarded/me'
      path: '/me'
      fullPath: '/me'
      preLoaderRoute: typeof AuthGuardedMeImport
      parentRoute: typeof AuthGuardedImport
    }
    '/_auth-guarded/me/_user-layout': {
      id: '/_auth-guarded/me/_user-layout'
      path: '/me'
      fullPath: '/me'
      preLoaderRoute: typeof AuthGuardedMeUserLayoutImport
      parentRoute: typeof AuthGuardedMeRoute
    }
    '/user/$userId': {
      id: '/user/$userId'
      path: '/user/$userId'
      fullPath: '/user/$userId'
      preLoaderRoute: typeof UserUserIdImport
      parentRoute: typeof rootRoute
    }
    '/user/$userId/_user-layout': {
      id: '/user/$userId/_user-layout'
      path: '/user/$userId'
      fullPath: '/user/$userId'
      preLoaderRoute: typeof UserUserIdUserLayoutImport
      parentRoute: typeof UserUserIdRoute
    }
    '/user/$userId/_user-layout/$tab/': {
      id: '/user/$userId/_user-layout/$tab/'
      path: '/$tab'
      fullPath: '/user/$userId/$tab'
      preLoaderRoute: typeof UserUserIdUserLayoutTabIndexImport
      parentRoute: typeof UserUserIdUserLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthGuardedRoute: AuthGuardedRoute.addChildren({
    AuthGuardedIndexRoute,
    AuthGuardedMeRoute: AuthGuardedMeRoute.addChildren({}),
  }),
  UserUserIdRoute: UserUserIdRoute.addChildren({
    UserUserIdUserLayoutRoute: UserUserIdUserLayoutRoute.addChildren({
      UserUserIdUserLayoutTabIndexRoute,
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth-guarded",
        "/user/$userId"
      ]
    },
    "/_auth-guarded": {
      "filePath": "_auth-guarded.tsx",
      "children": [
        "/_auth-guarded/",
        "/_auth-guarded/me"
      ]
    },
    "/_auth-guarded/": {
      "filePath": "_auth-guarded/index.tsx",
      "parent": "/_auth-guarded"
    },
    "/_auth-guarded/me": {
      "filePath": "_auth-guarded/me",
      "parent": "/_auth-guarded",
      "children": [
        "/_auth-guarded/me/_user-layout"
      ]
    },
    "/_auth-guarded/me/_user-layout": {
      "filePath": "_auth-guarded/me/_user-layout.tsx",
      "parent": "/_auth-guarded/me"
    },
    "/user/$userId": {
      "filePath": "user/$userId",
      "children": [
        "/user/$userId/_user-layout"
      ]
    },
    "/user/$userId/_user-layout": {
      "filePath": "user/$userId/_user-layout.tsx",
      "parent": "/user/$userId",
      "children": [
        "/user/$userId/_user-layout/$tab/"
      ]
    },
    "/user/$userId/_user-layout/$tab/": {
      "filePath": "user/$userId/_user-layout/$tab/index.tsx",
      "parent": "/user/$userId/_user-layout"
    }
  }
}
ROUTE_MANIFEST_END */
